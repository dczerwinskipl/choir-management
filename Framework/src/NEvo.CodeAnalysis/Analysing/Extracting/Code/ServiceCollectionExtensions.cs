using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Options;

namespace NEvo.CodeAnalysis.Analysing.Extracting.Code;

public static class ServiceCollectionExtensions
{
    public static IServiceCollection AddClassArtifactExtractor(this IServiceCollection services)
    {
        services.AddSingleton<ClassMethodArtifactExtractor>();
        services.AddSingleton<IClassMethodArtifactExtractor, ClassMethodArtifactExtractor>(sp => sp.GetRequiredService<ClassMethodArtifactExtractor>());
        services.AddSingleton<ClassArtifactExtractor>();
        services.AddSingleton<IArtifactExtractor, ClassArtifactExtractor>(sp => sp.GetRequiredService<ClassArtifactExtractor>());

        services.Configure<CodeAnalyzerOptions>(options =>
        {
            options.ArtifactExtractors.Add(typeof(ClassArtifactExtractor));
        });
        services.Configure<ClassArtifactExtractorOptions>(options =>
        {
            options.Filters.Add(new NonAbstractTypeArtifactFilter());
            options.Filters.Add(new NonGenericTypeDefinitionArtifactFilter());
            options.Filters.Add(new NonAutoGeneratedTypeArtifactFilter());
        });
        return services;
    }

    public static IServiceCollection ConfigureClassArtifactExtractorNamespaces(this IServiceCollection services, InvalidNamespaceArtifactFilterOptions options)
    {
        services.Configure<ClassArtifactExtractorOptions>(extractorOptions =>
        {
            extractorOptions.Filters.Add(new InvalidNamespaceArtifactFilter(Options.Create(options)));
        });
        return services;
    }

    public static IServiceCollection ConfigureClassArtifactExtractorNamespaces(this IServiceCollection services, params string[] namespaces)
    {
        services.Configure<ClassArtifactExtractorOptions>(extractorOptions =>
        {
            extractorOptions.Filters.Add(new InvalidNamespaceArtifactFilter(Options.Create(new InvalidNamespaceArtifactFilterOptions { Namespaces = namespaces, UseRegex = true })));
        });
        return services;
    }
}
